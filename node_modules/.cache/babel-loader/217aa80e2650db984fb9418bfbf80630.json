{"ast":null,"code":"var _jsxFileName = \"/home/konstantin/Projects/Clones/wild_hackaton/src/Components/ProfessionalList.jsx\",\n    _s = $RefreshSig$();\n\nimport ProfessionalCard from './ProfessionalCard';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Professional.css';\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfessionalList = () => {\n  _s();\n\n  const [isFiltered, setIsFiltered] = useState(false);\n  const [doctor, setDoctor] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    axios.get(`https://a.nacapi.com/Emu-IndianRed/`).then(res => {\n      setDoctor(res.data);\n      setLoading(true);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"ProfessionalList\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filterclass\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-doctors\",\n          onClick: () => setIsFiltered(!isFiltered),\n          children: isFiltered ? 'Filter by all Doctors' : 'Filter by best Doctors'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main1\",\n        children: !isFiltered ? doctor.map(doctor => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ProfessionalCard, {\n            doctor: doctor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)\n        }, doctor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)) : doctor.filter(doctor => doctor.rating >= 4.1).map(doctor => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ProfessionalCard, {\n            doctor: doctor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, doctor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ProfessionalList, \"GrTisr6/wIaOaNXqwCFZwRf/FxA=\");\n\n_c = ProfessionalList;\nexport default ProfessionalList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfessionalList\");","map":{"version":3,"sources":["/home/konstantin/Projects/Clones/wild_hackaton/src/Components/ProfessionalList.jsx"],"names":["ProfessionalCard","React","useState","useEffect","axios","LoadingSpinner","ProfessionalList","isFiltered","setIsFiltered","doctor","setDoctor","loading","setLoading","get","then","res","data","map","id","filter","rating"],"mappings":";;;AAAA,OAAOA,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CACJS,GADD,CACM,qCADN,EAECC,IAFD,CAEOC,GAAD,IAAS;AACXL,MAAAA,SAAS,CAACK,GAAG,CAACC,IAAL,CAAT;AACAJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KALD;AAOH,GARQ,CAAT;AAUI,sBACI;AAAA,cAAMD,OAAO,gBACjB;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE,MAAMH,aAAa,CAAC,CAACD,UAAF,CAA/D;AAAA,oBACKA,UAAU,GAAG,uBAAH,GAA6B;AAD5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA,kBACK,CAACA,UAAD,GACCE,MAAM,CAACQ,GAAP,CAAYR,MAAD,iBACT;AAAA,iCACA,QAAC,gBAAD;AAAkB,YAAA,MAAM,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA;AADA,WAAUA,MAAM,CAACS,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,CADD,GAMCT,MAAM,CACHU,MADH,CACWV,MAAD,IAAYA,MAAM,CAACW,MAAP,IAAiB,GADvC,EAEGH,GAFH,CAEQR,MAAD,iBACL;AAAA,iCACI,QAAC,gBAAD;AAAkB,YAAA,MAAM,EAAEA;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ,WAAUA,MAAM,CAACS,EAAjB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAPN;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADiB,gBAwBjB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAxBI;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BP,CA5CD;;GAAMZ,gB;;KAAAA,gB;AA8CN,eAAeA,gBAAf","sourcesContent":["import ProfessionalCard from './ProfessionalCard'\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport './Professional.css';\nimport LoadingSpinner from \"./LoadingSpinner\";\n\nconst ProfessionalList = () => {\n    const [isFiltered, setIsFiltered] = useState(false);\n    const [doctor, setDoctor] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        axios\n        .get(`https://a.nacapi.com/Emu-IndianRed/`)\n        .then((res) => {\n            setDoctor(res.data); \n            setLoading(true);           \n        })\n        \n    });   \n\n        return (\n            <div>{loading ? (\n        <section className=\"ProfessionalList\">\n            <div className=\"filterclass\">\n                <button className=\"filter-doctors\" onClick={() => setIsFiltered(!isFiltered)}>\n                    {isFiltered ? 'Filter by all Doctors' : 'Filter by best Doctors'}\n                </button>\n            </div>\n            <div id=\"main1\">\n                {!isFiltered\n                ? doctor.map((doctor) => (\n                    <div key={doctor.id}>\n                    <ProfessionalCard doctor={doctor} />\n                    </div>\n                ))\n                : doctor\n                    .filter((doctor) => doctor.rating >= 4.1)\n                    .map((doctor) => (\n                    <div key={doctor.id}>\n                        <ProfessionalCard doctor={doctor} />\n                    </div>\n                    ))}\n            </div>\n            </section>\n            ) : (\n        <LoadingSpinner />\n        )}\n        </div>\n    );\n};\n\nexport default ProfessionalList;"]},"metadata":{},"sourceType":"module"}